{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "tenantId": {
           "type": "string",
           "metadata": {
                "description": "description"
            }
        },
        "userId": {
           "type": "string",
           "metadata": {
                "description": "description"
            }
        }
    },
    "variables": {
        "safeRgName": "[uniqueString(resourceGroup().name)]",
        "storageAccount": "[concat(variables('safeRgName'), 'storage')]",
        "cosmosDbName": "[concat(variables('safeRgName'), 'cosmos')]",
        "eventGridTopicName": "[concat(variables('safeRgName'), 'eventGrid')]",
        "computerVisionName": "[concat(variables('safeRgName'), 'vision')]",
        "functionHostingPlanName": "[concat(variables('safeRgName'), 'plan')]",
        "functionTollBoothName": "[concat(variables('safeRgName'), '-TollBoothFunctionApp')]",
        "functionEventsName": "[concat(variables('safeRgName'), '-TollBoothEvents')]",
        "keyVaultName": "[concat(variables('safeRgName'), '-vault')]",
        
        
        "cosmosUri": "https://btf2020labs.blob.core.windows.net/labs/serverless/deploy/cosmos.json",
        "functionsUri": "https://btf2020labs.blob.core.windows.net/labs/serverless/deploy/functions.json"
    },
    "resources": [
        {
            "name": "[variables('storageAccount')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('storageAccount')]"
            },
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "cosmos",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(1,1)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                  "uri":"[variables('cosmosUri')]",
                  "contentVersion":"1.0.0.0"
                },
                "parameters": {
                    "cosmosDbName": { "value": "[variables('cosmosDbName')]"}
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "functions",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(1,1)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                  "uri":"[variables('functionsUri')]",
                  "contentVersion":"1.0.0.0"
                },
                "parameters": {
                    "functionHostingPlanName": { "value": "[variables('functionHostingPlanName')]"},
                    "functionTollBoothName": { "value": "[variables('functionTollBoothName')]"},
                    "functionEventsName": { "value": "[variables('functionEventsName')]"}
                }
            }
        },
        {
            "name": "[variables('eventGridTopicName')]",
            "type": "Microsoft.EventGrid/topics",
            "location": "[resourceGroup().location]",
            "apiVersion": "2018-01-01"
        },
        {
          "type": "Microsoft.CognitiveServices/accounts",
          "apiVersion": "2017-04-18",
          "name": "[variables('computerVisionName')]",
          "location": "[resourceGroup().location]",
          "kind": "ComputerVision",
          "sku": {
              "name": "S1"
          },
          "properties": {}
      },
      {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-02-01",
            "name": "[variables('functionTollBoothName')]",
            "kind": "functionapp,linux",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('functionTollBoothName')]",
                "siteConfig": {
                     "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "computerVisionApiUrl",
                            "value": "[concat('https://', variables('computerVisionName'), '.cognitiveservices.azure.com/vision/v2.0/ocr')]"
                        },
                        {
                            "name": "computerVisionApiKey",
                            "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'computerVisionApiKey')).secretUriWithVersion, ')')]"
                        },
                        {
                            "name": "eventGridTopicEndpoint",
                            "value": "[reference(variables('eventGridTopicName')).endpoint]"
                        },
                        {
                            "name": "eventGridTopicKey",
                            "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'eventGridTopicKey')).secretUriWithVersion, ')')]"
                        },
                        {
                            "name": "cosmosDBEndPointUrl",
                            "value": "[reference('cosmos').outputs.cosmosUri.value]"
                        },
                        {
                            "name": "cosmosDBAuthorizationKey",
                            "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'cosmosDBAuthorizationKey')).secretUriWithVersion, ')')]"
                        },
                        {
                            "name": "cosmosDBDatabaseId",
                            "value": "LicensePlates"
                        },
                        {
                            "name": "cosmosDBCollectionId",
                            "value": "Processed"
                        },
                        {
                            "name": "exportCsvContainerName",
                            "value": "export"
                        },
                        {
                            "name": "blobStorageConnection",
                            "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'blobStorageConnection')).secretUriWithVersion, ')')]"
                        }
                        
                    ]
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]",
                "clientAffinityEnabled": false
            }
        },
      {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-02-01",
            "name": "[variables('functionEventsName')]",
            "kind": "functionapp,linux",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('functionEventsName')]",
                "siteConfig": {
                     "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "node"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        }
                    ]
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionHostingPlanName'))]",
                "clientAffinityEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "dependsOn": ["[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]" ],
            "name": "[variables('functionHostingPlanName')]",
            "location": "[resourceGroup().location]",
            "kind": "linux",
            "properties":{
                "reserved": false
            },
            "sku": {
                "Tier": "Dynamic",
                "Name": "Y1"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('keyVaultName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount'))]",
                "[resourceId('Microsoft.Resources/deployments', 'cosmos')]",
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('computerVisionName'))]",
                "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'functions')]"
            ],
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": [
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "[parameters('userId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update"
                             ],
                            "secrets": [
                                "List",
                                "Get",
                                "Set"
                            ]
                       }
                    },
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "[reference(concat(resourceId('Microsoft.Web/sites/', variables('functionTollBoothName')), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update"
                             ],
                            "secrets": [
                                "List",
                                "Get",
                                "Set"
                            ]
                       }
                    },
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "[reference(concat(resourceId('Microsoft.Web/sites/', variables('functionEventsName')), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List"
                             ],
                            "secrets": [
                                "List",
                                "Get",
                                "Set"
                            ]
                       }
                    }
                ],
                "sku": {
                    "name": "standard",
                    "family": "A"
                }
            },
            "resources": [
                {
                    "type": "secrets",
                    "name": "computerVisionApiKey",
                    "apiVersion": "2016-10-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                    ],
                    "properties": {
                        "value": "[listKeys(variables('computerVisionName'), '2017-04-18').key1]"
                    }
                },
                {
                    "type": "secrets",
                    "name": "computerVisionEndpoint",
                    "apiVersion": "2016-10-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                    ],
                    "properties": {
                        "value": "[reference(variables('computerVisionName'), '2017-04-18').endpoint]"
                    }
                },
                {
                    "type": "secrets",
                    "name": "eventGridTopicKey",
                    "apiVersion": "2016-10-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                    ],
                    "properties": {
                        "value": "[listKeys(variables('eventGridTopicName'), '2018-01-01').key1]"
                    }
                },
                {
                    "type": "secrets",
                    "name": "cosmosDBAuthorizationKey",
                    "apiVersion": "2016-10-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                    ],
                    "properties": {
                        "value": "[reference('cosmos').outputs.cosmosPrimaryKey.value]"
                    }
                },
                {
                    "type": "secrets",
                    "name": "blobStorageConnection",
                    "apiVersion": "2016-10-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                    ],
                    "properties": {
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccount'),';AccountKey=',concat(listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storageAccount')),'2015-05-01-preview').key1), ';EndpointSuffix=core.windows.net')]"
                    }
                }
            ]
        }
        
    ],
    "outputs": {
        
    }
}